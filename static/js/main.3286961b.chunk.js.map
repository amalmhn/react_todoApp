{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","textChange","e","console","log","target","value","setState","txtContent","addItem","currentText","state","currentItems","items","push","removeItem","key","window","confirm","splice","itemsList","this","map","obj","onClick","type","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAmDeA,E,kDA/Cb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAORC,WAAW,SAACC,GACVC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,EAAKC,SAAS,CAACC,WAAWN,EAAEG,OAAOC,SAVnB,EAalBG,QAAQ,SAACP,GACP,IAAIQ,EAAc,EAAKC,MAAMH,WACzBI,EAAe,EAAKD,MAAME,MAC9BD,EAAaE,KAAKJ,GAClB,EAAKH,SAAS,CAACM,MAAMD,KAjBL,EAoBlBG,WAAW,SAACC,GACV,GAAIC,OAAOC,QAAQ,yCAAnB,CAGA,IAAIN,EAAe,EAAKD,MAAME,MAC9BD,EAAaO,OAAOH,EAAI,GACxB,EAAKT,SAAS,CAACM,MAAMD,MAxBrB,EAAKD,MAAM,CACTE,MAAM,CAAC,MAAQ,OACfL,WAAa,IAJC,E,0CA6BlB,WAAU,IAAD,OACHY,EAAYC,KAAKV,MAAME,MAAMS,KAAI,SAACC,EAAIP,GACxC,OAAO,+BAAeO,EAAI,wBAAQC,QAAS,WAAK,EAAKT,WAAWC,IAAtC,sBAAVA,MAGlB,OACE,gCACE,uBAAOS,KAAK,OAAOC,SAAUL,KAAKpB,aAClC,wBAAQuB,QAASH,KAAKZ,QAAtB,iBACA,6BACCW,IAED,4BAAIC,KAAKV,MAAMH,oB,GA3CLmB,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3286961b.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      items:[\"It1\" , \"it2\"],\n      txtContent : \"\"\n    };\n  }\n\n  textChange=(e)=>{\n    console.log(e.target.value)\n    this.setState({txtContent:e.target.value})\n  };\n\n  addItem=(e)=>{\n    let currentText = this.state.txtContent;\n    let currentItems = this.state.items;\n    currentItems.push(currentText);\n    this.setState({items:currentItems});\n  }\n\n  removeItem=(key)=>{\n    if(!window.confirm(\"Are you sure you want to delete this?\")){\n      return;\n    }\n    let currentItems = this.state.items;\n    currentItems.splice(key,1)\n    this.setState({items:currentItems})\n  }\n\n  render() {\n    var itemsList = this.state.items.map((obj,key)=>{\n      return <li key={key}>{obj}<button onClick={()=>{this.removeItem(key)}}>Delete</button></li>\n    })\n\n    return (\n      <div>\n        <input type=\"text\" onChange={this.textChange}/>\n        <button onClick={this.addItem}>Add</button>\n        <ul>\n        {itemsList}\n        </ul>\n        <p>{this.state.txtContent}</p>\n      </div>\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}